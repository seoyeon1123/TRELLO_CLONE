{"version":3,"sources":["theme.ts","atoms.tsx","Login/firebase.tsx","google_icon.png","Login/Login.tsx","Login/SignUp.tsx","Component/ModalEdit.tsx","Component/Card.tsx","Component/Board.tsx","Component/ModalAllDelete.tsx","Component/DeleteBoard.tsx","App.tsx","Router.tsx","index.tsx"],"names":["lightTheme","bgColor","boardColor","cardColor","textColor","boardtextColor","deleteBtn","toggle","trash","darkTheme","persistAtom","recoilPersist","key","storage","localStorage","toDoState","atom","default","effects_UNSTABLE","isDarkAtom","app","getApps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getApp","db","getFirestore","auth","getAuth","authService","googleProvider","GoogleAuthProvider","Container","styled","div","_templateObject","_taggedTemplateLiteral","props","theme","Title","h1","_templateObject2","Strong","strong","_templateObject3","Form","form","_templateObject4","Input","input","_templateObject5","Button","button","_templateObject6","GoogleBtn","_templateObject7","GoogleIcon","img","_templateObject8","Hr","hr","_templateObject9","P","p","_templateObject10","Span","span","_templateObject11","Login","email","setEmail","useState","password","setPassword","user","setUser","error","setError","history","useHistory","useEffect","unsubscribe","onAuthStateChanged","currentUser","resetForm","_jsx","Redirect","to","_jsxs","children","onSubmit","async","event","preventDefault","userCredential","signInWithEmailAndPassword","console","log","push","message","type","value","onChange","e","target","placeholder","required","onClick","result","signInWithPopup","src","googleIcon","alt","Link","style","color","React","memo","Sub","SignUp","createUserWithEmailAndPassword","window","alert","signOut","code","ModalWrapper","ModalContent","ModalEdit","_ref","toDoText","toDoId","boardId","onClose","inputValue","setValue","setTodos","useSetRecoilState","_Fragment","stopPropagation","newTodos","trim","allBoards","updatedTodos","map","todo","id","text","currentTarget","CardTodos","isDragging","Card","index","isEditOpen","setisEditOpen","isIconVisible","setIsIconVisible","closeEdit","onClickEdit","Draggable","draggableId","toString","magic","info","ref","innerRef","draggableProps","dragHandleProps","FontAwesomeIcon","icon","faPenToSquare","Wrapper","h2","Area","isDraggingOver","isDraggingFromThis","TitleForm","StyledFontAwesomeIcon","Board","toDos","setToDos","register","handleSubmit","useForm","faMinus","onClickDeleteBoard","deletedBoard","rest","_ref2","toDo","newTodo","Date","now","isDelete","concat","Droppable","droppableId","droppableProps","Boolean","draggingFromThisWith","Array","isArray","ModalAllDelete","onConfirm","handleConfirm","FontAwesomeIconStyled","FontAwesomeIconAllDelete","IconWrapper","DeleteBoard","isClearOpen","setClearOpen","onClickClearAll","copyAllBoards","Object","keys","forEach","closeAllClear","onClickClearBtn","provided","faTrashCan","faBroom","Header","header","NowDate","CustomFontAwesomeIcon","Boards","FormInput","App","useRecoilState","isToggled","setIsToggled","formattedDate","setFormattedDate","toLocaleString","userId","setUserId","interval","setInterval","clearInterval","uid","Promise","resolve","reject","userTodos","userDoc","doc","docSnap","getDoc","exists","data","todos","loadTodos","fetchData","setDoc","saveTodos","DragDropContext","onDragEnd","source","destination","allBoard","copySource","splice","sourceBoard","destinationBoard","taskObj","toggleTheme","prev","faToggleOn","faToggleOff","addToDo","Router","loggedIn","setLoggedIn","BrowserRouter","Switch","Route","exact","path","GlobalStyle","createGlobalStyle","ThemedApp","isLight","useRecoilValue","ThemeProvider","ReactDOM","render","StrictMode","RecoilRoot","document","getElementById"],"mappings":"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","file":"static/js/main.abb0c3d4.chunk.js","sourcesContent":["import { DefaultTheme } from 'styled-components';\n\nexport const lightTheme: DefaultTheme = {\n  bgColor: '#F1E5D1',\n  boardColor: '#254336',\n  cardColor: '#FEFEDF',\n  textColor: '#254336',\n  boardtextColor: 'white',\n  deleteBtn: 'white',\n  toggle: '#F1E5D1',\n  trash: '#254336',\n};\n\nexport const darkTheme: DefaultTheme = {\n  bgColor: '#254336',\n  boardColor: '#F1E5D1',\n  cardColor: '#6B8A7A',\n  textColor: '#F1E5D1',\n  boardtextColor: 'black',\n  deleteBtn: '#254336',\n  toggle: '#254336',\n  trash: '#F1E5D1',\n};\n","import { atom } from 'recoil';\nimport { recoilPersist } from 'recoil-persist';\n\nexport interface ITodo {\n  id: number;\n  text: string;\n  isDelete: boolean;\n}\n\nexport interface ITodoState {\n  [key: string]: ITodo[];\n}\n\nconst { persistAtom } = recoilPersist({\n  key: 'todoPersist',\n  storage: localStorage,\n});\n\nexport const toDoState = atom<ITodoState>({\n  key: 'toDoState',\n  default: {},\n  effects_UNSTABLE: [persistAtom],\n});\n\nexport const isDarkAtom = atom<boolean>({\n  key: 'isDark',\n  default: true,\n});\n","import { initializeApp, getApps, getApp } from 'firebase/app';\nimport { getAuth, GoogleAuthProvider, onAuthStateChanged } from 'firebase/auth';\nimport { getFirestore, doc, setDoc, getDoc } from 'firebase/firestore';\n\n// Firebase configuration\nconst firebaseConfig = {\n  apiKey: 'AIzaSyCfyu4kxlka9GUMHFd57w-NUqh-3__O2xk',\n  authDomain: 'fir-login-ceae0.firebaseapp.com',\n  projectId: 'fir-login-ceae0',\n  storageBucket: 'fir-login-ceae0.appspot.com',\n  messagingSenderId: '146389013194',\n  appId: '1:146389013194:web:0a51c6ee32ec52120c1a33',\n  measurementId: 'G-B3RY3H6YJZ',\n};\n\n// Initialize Firebase\nconst app = getApps().length === 0 ? initializeApp(firebaseConfig) : getApp();\nconst db = getFirestore(app);\nconst auth = getAuth(app);\n\n// Function to get current user's UID\nconst getUserUid = (): Promise<string> => {\n  return new Promise((resolve, reject) => {\n    onAuthStateChanged(auth, (user) => {\n      if (user) {\n        resolve(user.uid);\n      } else {\n        reject('User not logged in');\n      }\n    });\n  });\n};\n\n// Define type for todos (matches your Recoil state)\ntype Todos = {\n  [boardId: string]: { id: number; text: string; isDelete: boolean }[];\n};\n\n// Function to save user's todos to Firestore\nconst saveTodos = async (userId: string, todos: Todos): Promise<void> => {\n  try {\n    const userDoc = doc(db, 'users', userId);\n    await setDoc(userDoc, { todos });\n    console.log('Todos saved to Firestore');\n  } catch (error) {\n    console.error('Error saving todos to Firestore:', error);\n  }\n};\n\n// Function to load user's todos from Firestore\nconst loadTodos = async (userId: string): Promise<Todos> => {\n  try {\n    const userDoc = doc(db, 'users', userId);\n    const docSnap = await getDoc(userDoc);\n    if (docSnap.exists()) {\n      return docSnap.data().todos as Todos;\n    } else {\n      console.log('No such document!');\n      return {};\n    }\n  } catch (error) {\n    console.error('Error loading todos from Firestore:', error);\n    return {};\n  }\n};\n\nexport const authService = auth;\nexport const googleProvider = new GoogleAuthProvider();\nexport { db, getUserUid, saveTodos, loadTodos };\n","export default __webpack_public_path__ + \"static/media/google_icon.9db27c10.png\";","import React, { useState, useEffect } from 'react';\nimport { useHistory, Link, Redirect } from 'react-router-dom';\nimport { authService, googleProvider } from './firebase';\nimport {\n  User,\n  signInWithEmailAndPassword,\n  signInWithPopup,\n  onAuthStateChanged,\n} from 'firebase/auth';\nimport styled from 'styled-components';\nimport googleIcon from '../google_icon.png';\n\nconst Container = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  background-color: ${(props) => props.theme.boardColor};\n  width: 450px;\n  height: 450px;\n  color: ${(props) => props.theme.boardtextColor};\n  border-radius: 20px;\n`;\n\nconst Title = styled.h1`\n  margin-top: 20px;\n  font-size: 30px;\n`;\n\nconst Strong = styled.strong`\n  font-size: 80px;\n`;\n\nconst Form = styled.form`\n  margin-top: 20px;\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n`;\n\nconst Input = styled.input`\n  font-size: 17px;\n  padding: 5px;\n  width: 270px;\n  background-color: white;\n  margin-bottom: 5px;\n  border-radius: 10px;\n\n  &:focus {\n    outline: none;\n  }\n\n  &::placeholder {\n    font-family: 'Ownglyph_ryurue-Rg';\n  }\n`;\n\nconst Button = styled.button`\n  margin-top: 10px;\n  font-size: 18px;\n  width: auto;\n  height: 40px;\n  background-color: ${(props) => props.theme.bgColor};\n  border-radius: 10px;\n  &:active {\n    font-size: 15px;\n  }\n  font-family: 'Ownglyph_ryurue-Rg';\n`;\n\nconst GoogleBtn = styled(Button)`\n  margin-top: 5px;\n  font-size: 15px;\n  padding: 5px 50px;\n  border-radius: 10px;\n  display: flex;\n  background-color: white;\n  align-items: center;\n`;\n\nconst GoogleIcon = styled.img`\n  width: 30px; /* 이미지 크기 조정 */\n  margin-right: 10px; /* 이미지와 버튼 텍스트 사이 간격 조정 */\n`;\n\nconst Hr = styled.hr`\n  width: 80%;\n  margin: 10px 0;\n  border: none;\n  border-top: 1px solid ${(props) => props.theme.boardtextColor};\n`;\n\nconst P = styled.p`\n  margin-top: 40px;\n  margin-bottom: 10px;\n  font-size: 20px;\n`;\n\nconst Span = styled.span`\n  color: #ffc700;\n`;\n\nconst Login = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState<User | null>(null);\n  const [error, setError] = useState('');\n  const history = useHistory();\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(authService, (currentUser) => {\n      setUser(currentUser);\n    });\n\n    return () => unsubscribe();\n  }, []);\n\n  const handleLogin = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setError('');\n\n    try {\n      const userCredential = await signInWithEmailAndPassword(\n        authService,\n        email,\n        password\n      );\n      setUser(userCredential.user);\n      console.log('User logged in:', userCredential.user);\n      resetForm(); // 로그인 후 이메일과 비밀번호 초기화\n      history.push('/TRELLO_CLONE/ToDoBoard'); // 로그인 성공 후 ToDoBoard로 리디렉션\n    } catch (error) {\n      setError((error as Error).message);\n      console.error('Error logging in:', error);\n    }\n  };\n\n  const handleGoogleLogin = async () => {\n    setError('');\n\n    try {\n      const result = await signInWithPopup(authService, googleProvider);\n      setUser(result.user);\n      console.log('User signed in with Google:', result.user);\n      history.push('/TRELLO_CLONE/ToDoBoard'); // Google 로그인 성공 후 ToDoBoard로 리디렉션\n    } catch (error) {\n      setError((error as Error).message);\n      console.error('Error signing in with Google:', error);\n    }\n  };\n\n  const resetForm = () => {\n    setEmail('');\n    setPassword('');\n    setError('');\n  };\n\n  // 로그인 상태일 경우 ToDoBoard로 리디렉션\n  if (user) {\n    return <Redirect to=\"/TRELLO_CLONE/ToDoBoard\" />;\n  }\n\n  return (\n    <Container>\n      <Title>\n        <Strong>오</Strong>늘 <Strong>너</Strong>의 <Strong>하</Strong>루는\n        <Strong>?</Strong>\n      </Title>\n      <Form onSubmit={handleLogin}>\n        <Input\n          type=\"email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          placeholder=\"Email\"\n          required\n        />\n        <Input\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          placeholder=\"Password\"\n          required\n        />\n        <Button type=\"submit\">Login</Button>\n      </Form>\n      <Hr />\n\n      <GoogleBtn onClick={handleGoogleLogin}>\n        <GoogleIcon src={googleIcon} alt=\"Google Icon\" />\n        Login with Google\n      </GoogleBtn>\n      <P>\n        계정이 없으신가요?{' '}\n        <Link to=\"/TRELLO_CLONE/SignUp\">\n          <Span>회원가입</Span>\n        </Link>\n      </P>\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n    </Container>\n  );\n};\n\nexport default React.memo(Login);\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\nimport { authService } from './firebase';\nimport { Link } from 'react-router-dom';\n\nconst Container = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  background-color: ${(props) => props.theme.boardColor};\n  width: 450px;\n  height: 450px;\n  color: ${(props) => props.theme.boardtextColor};\n  border-radius: 20px;\n`;\n\nconst Title = styled.h1`\n  font-size: 40px;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n  margin-top: 15px;\n`;\n\nconst Input = styled.input`\n  font-size: 17px;\n  padding: 5px;\n  width: 270px;\n  background-color: white;\n  margin-bottom: 10px;\n  border-radius: 10px;\n\n  &:focus {\n    outline: none;\n  }\n  &::placeholder {\n    font-family: 'Ownglyph_ryurue-Rg';\n  }\n`;\n\nconst Sub = styled.p`\n  text-align: end;\n`;\n\nconst Button = styled.button`\n  margin-top: 10px;\n  font-size: 18px;\n  width: auto;\n  height: 40px;\n  background-color: ${(props) => props.theme.bgColor};\n  border-radius: 10px;\n  &:active {\n    font-size: 15px;\n  }\n  font-family: 'Ownglyph_ryurue-Rg';\n`;\n\nconst P = styled.p`\n  margin-top: 50px;\n  margin-bottom: 0;\n  font-size: 20px;\n`;\n\nconst Span = styled.span`\n  color: #ffc700;\n`;\n\nconst SignUp = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState<string>('');\n\n  const handleSignUp = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setError('');\n\n    try {\n      const userCredential = await createUserWithEmailAndPassword(\n        authService,\n        email,\n        password\n      );\n      console.log('User signed up:', userCredential.user);\n      setEmail('');\n      setPassword('');\n      window.alert('회원가입에 성공하셨습니다.');\n      await authService.signOut(); // 회원가입 후 사용자를 로그아웃시킴\n    } catch (error: any) {\n      switch (error.code) {\n        case 'auth/email-already-in-use':\n          setError('이미 등록된 이메일입니다. 다른 이메일을 사용해 주세요.');\n          break;\n        case 'auth/invalid-email':\n          setError('유효하지 않은 이메일 주소입니다.');\n          break;\n        case 'auth/weak-password':\n          setError(\n            '비밀번호가 너무 약합니다. 더 강력한 비밀번호를 사용해 주세요.'\n          );\n          break;\n        default:\n          setError('회원가입 중 오류가 발생했습니다.');\n          break;\n      }\n      console.error('Error signing up:', error);\n    }\n  };\n\n  return (\n    <Container>\n      <Title>회원가입</Title>\n      <Form onSubmit={handleSignUp}>\n        <Sub>너의 이메일을 입력해줘</Sub>\n        <Input\n          type=\"email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          placeholder=\"Email\"\n          required\n        />\n        <Sub>너의 비밀번호를 입력해줘</Sub>\n        <Input\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          placeholder=\"Password\"\n          required\n        />\n        <Button type=\"submit\">회원가입</Button>\n        <P>\n          이미 회원가입을 하셨나요?\n          <Link to=\"/TRELLO_CLONE/Login\">\n            <Span> 로그인하기 </Span>\n          </Link>\n        </P>\n      </Form>\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n    </Container>\n  );\n};\n\nexport default React.memo(SignUp);\n","import React, { useState } from 'react';\nimport { useSetRecoilState } from 'recoil';\nimport { toDoState } from '../atoms';\nimport styled from 'styled-components';\n\nconst ModalWrapper = styled.div`\n  position: fixed; /* 화면 고정 */\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.5); /* 배경 반투명 처리 */\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000; /* 다른 요소보다 위에 오도록 */\n`;\n\nconst ModalContent = styled.div`\n  background: ${(props) => props.theme.cardColor};\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n`;\n\nconst Input = styled.input`\n  border-style: none;\n  background-color: ${(props) => props.theme.cardColor};\n  border-bottom: 1px solid ${(props) => props.theme.boardColor};\n  color: ${(props) => props.theme.textColor};\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst Button = styled.button`\n  background-color: ${(props) => props.theme.boardColor};\n  margin-left: 10px;\n  color: ${(props) => props.theme.boardtextColor};\n  border-radius: 20px;\n  border: 1px solid ${(props) => props.theme.boardColor};\n  font-size: 15px;\n`;\n\ninterface IModal {\n  toDoText: string;\n  toDoId: number;\n  boardId: string;\n  onClose: () => void;\n}\n\nconst ModalEdit = ({ toDoText, toDoId, boardId, onClose }: IModal) => {\n  const [inputValue, setValue] = useState(toDoText);\n  const setTodos = useSetRecoilState(toDoState);\n\n  const onChange = (e: React.FormEvent<HTMLInputElement>) => {\n    setValue(e.currentTarget.value);\n  };\n\n  const onSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    const newTodos = inputValue;\n    if (newTodos !== null && newTodos.trim() !== '') {\n      setTodos((allBoards) => {\n        const updatedTodos = allBoards[boardId].map((todo) =>\n          todo.id === toDoId ? { ...todo, text: newTodos } : todo\n        );\n\n        return {\n          ...allBoards,\n          [boardId]: updatedTodos,\n        };\n      });\n      onClose();\n      setValue('');\n    }\n  };\n\n  return (\n    <>\n      <ModalWrapper onClick={onClose}>\n        <ModalContent onClick={(e) => e.stopPropagation()}>\n          <form onSubmit={onSubmit}>\n            <Input type=\"text\" value={inputValue} onChange={onChange} />\n            <Button type=\"submit\">확인</Button>\n          </form>\n        </ModalContent>\n      </ModalWrapper>\n    </>\n  );\n};\n\nexport default ModalEdit;\n","import React, { useState } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPenToSquare } from '@fortawesome/free-solid-svg-icons';\n\nimport ModalEdit from './ModalEdit';\n\nconst CardTodos = styled.div<ICardTodosProps>`\n  display: flex;\n  justify-content: space-between;\n  background-color: ${(props) =>\n    props.isDragging ? '#B7B597' : props.theme.cardColor};\n  border-radius: 10px;\n  padding: 5px 10px;\n  margin-bottom: 5px;\n`;\n\ninterface ICardProps {\n  toDoId: number;\n  toDoText: string;\n  index: number;\n  boardId: string; // 보드 ID를 문자열로 변경\n}\n\ninterface ICardTodosProps {\n  isDragging: boolean;\n}\n\nconst Card = ({ toDoText, toDoId, index, boardId }: ICardProps) => {\n  const [isEditOpen, setisEditOpen] = useState(false);\n  const [isIconVisible, setIsIconVisible] = useState(true);\n\n  const openEdit = () => {\n    setisEditOpen(true);\n    setIsIconVisible(false);\n  };\n\n  const closeEdit = () => {\n    setisEditOpen(false);\n    setIsIconVisible(true);\n  };\n\n  const onClickEdit = (e: React.MouseEvent) => {\n    e.preventDefault();\n\n    openEdit();\n  };\n\n  return (\n    <Draggable key={toDoId} draggableId={toDoId.toString()} index={index}>\n      {(magic, info) => (\n        <CardTodos\n          ref={magic.innerRef}\n          {...magic.draggableProps}\n          {...magic.dragHandleProps}\n          isDragging={info.isDragging}\n        >\n          {toDoText}\n\n          {/* <FontAwesomeIcon onClick={onClickEdit} icon={faPenToSquare} /> */}\n          {isIconVisible && (\n            <FontAwesomeIcon icon={faPenToSquare} onClick={onClickEdit} />\n          )}\n          {isEditOpen && (\n            <ModalEdit\n              toDoText={toDoText}\n              toDoId={toDoId}\n              boardId={boardId}\n              onClose={closeEdit}\n            />\n          )}\n        </CardTodos>\n      )}\n    </Draggable>\n  );\n};\n\nexport default React.memo(Card);\n","import { Droppable } from 'react-beautiful-dnd';\nimport styled from 'styled-components';\nimport { toDoState } from '../atoms';\nimport Card from './Card';\nimport { useForm } from 'react-hook-form';\nimport { useSetRecoilState } from 'recoil';\nimport { ITodo } from '../atoms';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMinus } from '@fortawesome/free-solid-svg-icons';\nimport React from 'react';\n\nconst Wrapper = styled.div`\n  width: 300px;\n  padding-top: 10px;\n  margin: 20px;\n  background-color: ${(props) => props.theme.boardColor};\n  border-radius: 5px;\n  min-height: 300px;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n`;\n\nconst Title = styled.h2`\n  text-align: center;\n  font-weight: 600;\n  margin-bottom: 10px;\n  font-size: 22px;\n  margin-right: auto;\n  color: ${(props) => props.theme.boardtextColor};\n`;\n\nconst Form = styled.form`\n  width: 100%;\n  input {\n    width: 100%;\n  }\n`;\n\ninterface IAreaProps {\n  isDraggingOver: boolean;\n  isDraggingFromThis: boolean;\n}\n\nconst Area = styled.div<IAreaProps>`\n  background-color: ${(props) =>\n    props.isDraggingOver\n      ? 'rgba(126, 215, 193, 0.1)'\n      : props.isDraggingFromThis\n      ? 'rgba(126, 215, 193, 0.1)'\n      : 'transparent'};\n  flex-grow: 1;\n  transition: background-color 0.3s ease-in-out;\n  padding: 20px;\n`;\n\nconst Input = styled.input`\n  text-align: center;\n  border-style: none;\n  background-color: '#DC8686';\n  font-size: 18px;\n\n  height: 30px;\n\n  width: 30px;\n  &:hover {\n    text-decoration: none;\n  }\n  &:focus {\n    outline: none;\n  }\n\n  &::placeholder {\n    font-family: 'Ownglyph_ryurue-Rg';\n  }\n`;\n\nconst TitleForm = styled.div`\n  display: flex;\n  text-align: center;\n  justify-content: center;\n  flex-direction: row;\n  margin: 0px 10px;\n`;\n\nconst StyledFontAwesomeIcon = styled(FontAwesomeIcon)`\n  margin-left: auto;\n  color: ${(props) => props.theme.deleteBtn};\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\ninterface IBoardProps {\n  toDos: ITodo[];\n  boardId: string;\n}\n\ninterface IForm {\n  toDo: string;\n}\nconst Board = ({ boardId, toDos }: IBoardProps) => {\n  const setToDos = useSetRecoilState(toDoState);\n  const { register, handleSubmit, setValue } = useForm<IForm>();\n\n  const onValid = ({ toDo }: IForm) => {\n    const newTodo = {\n      id: Date.now(),\n      text: toDo,\n      isDelete: false,\n    };\n\n    if (toDos.length >= 8) {\n      return;\n    }\n\n    setToDos((allBoards) => {\n      return {\n        ...allBoards,\n        [boardId]: [...allBoards[boardId], newTodo],\n      };\n    });\n    setValue('toDo', '');\n  };\n\n  const onClickDeleteBoard = () => {\n    setToDos((allBoards) => {\n      const { [boardId]: deletedBoard, ...rest } = allBoards;\n      return rest;\n    });\n  };\n  return (\n    <>\n      <Wrapper>\n        <TitleForm>\n          <Title>{boardId}</Title>\n          <StyledFontAwesomeIcon icon={faMinus} onClick={onClickDeleteBoard} />\n        </TitleForm>\n\n        <Form onSubmit={handleSubmit(onValid)}>\n          <Input\n            {...register('toDo', { required: true })}\n            type=\"text\"\n            placeholder={`적어봐! \"${boardId}\" 의 할일을!`}\n          />\n        </Form>\n        <Droppable droppableId={boardId}>\n          {(magic, info) => (\n            <Area\n              ref={magic.innerRef}\n              {...magic.droppableProps}\n              isDraggingOver={info.isDraggingOver}\n              isDraggingFromThis={Boolean(info.draggingFromThisWith)}\n            >\n              {Array.isArray(toDos) &&\n                toDos.map((toDo, index) => (\n                  <Card\n                    boardId={boardId}\n                    key={toDo.id}\n                    index={index}\n                    toDoText={toDo.text}\n                    toDoId={toDo.id}\n                  />\n                ))}\n              {magic.placeholder}\n            </Area>\n          )}\n        </Droppable>\n      </Wrapper>\n    </>\n  );\n};\nexport default React.memo(Board);\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst ModalWrapper = styled.div`\n  position: fixed;\n  right: 20px;\n  bottom: 80px;\n  display: flex;\n  font-size: 20px;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n`;\n\nconst ModalContent = styled.div`\n  background: ${(props) => props.theme.cardColor};\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  min-width: 300px; /* 최소 너비 설정 */\n  min-height: 100px; /* 최소 높이 설정 */\n  text-align: center; /* 텍스트 중앙 정렬 */\n  font-size: 30px;\n`;\n\nconst Button = styled.button`\n  background-color: ${(props) => props.theme.boardColor};\n  margin-left: 10px;\n  color: ${(props) => props.theme.boardtextColor};\n  border-radius: 20px;\n  border: 1px solid ${(props) => props.theme.boardColor};\n  font-size: 20px;\n  padding: 5px 10px;\n  margin-top: 10px;\n  cursor: pointer; /* 포인터 커서 추가 */\n  font-family: 'Ownglyph_ryurue-Rg';\n`;\n\ninterface IModalProps {\n  onClose: () => void;\n  onConfirm: () => void;\n}\n\nconst ModalAllDelete = ({ onClose, onConfirm }: IModalProps) => {\n  const handleConfirm = () => {\n    onConfirm();\n    onClose(); // 모달 닫기\n  };\n\n  return (\n    <ModalWrapper onClick={onClose}>\n      <ModalContent onClick={(e) => e.stopPropagation()}>\n        <p>모두 삭제해도 괜찮아 ?</p>\n        <Button onClick={handleConfirm}>응!</Button>\n        <Button onClick={onClose}>아니..</Button>\n      </ModalContent>\n    </ModalWrapper>\n  );\n};\n\nexport default ModalAllDelete;\n","import React, { useState } from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashCan } from '@fortawesome/free-regular-svg-icons';\nimport { faBroom } from '@fortawesome/free-solid-svg-icons';\nimport { useSetRecoilState } from 'recoil';\nimport { toDoState } from '../atoms';\nimport ModalAllDelete from './ModalAllDelete';\n\nconst Container = styled.div`\n  width: 100px;\n  height: 100px;\n  position: fixed;\n  right: 10px;\n  bottom: 35px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst FontAwesomeIconStyled = styled(FontAwesomeIcon)`\n  margin-bottom: 10px;\n`;\n\nconst FontAwesomeIconAllDelete = styled(FontAwesomeIcon)`\n  cursor: pointer;\n  margin-bottom: 20px;\n\n  &:active {\n    font-size: 50px;\n  }\n`;\n\nconst IconWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  font-size: 60px;\n  color: ${(props) => props.theme.trash};\n  position: fixed;\n`;\n\nconst DeleteBoard = () => {\n  const [isClearOpen, setClearOpen] = useState(false);\n  const setTodos = useSetRecoilState(toDoState);\n\n  const onClickClearAll = () => {\n    setTodos((allBoards) => {\n      const copyAllBoards = { ...allBoards };\n      Object.keys(copyAllBoards).forEach((key) => delete copyAllBoards[key]);\n      return copyAllBoards;\n    });\n    setClearOpen(false); // 모달 닫기\n  };\n\n  const openAllClear = () => {\n    setClearOpen(true);\n  };\n\n  const closeAllClear = () => {\n    setClearOpen(false);\n  };\n\n  const onClickClearBtn = (e: React.MouseEvent) => {\n    e.preventDefault();\n    openAllClear();\n  };\n\n  return (\n    <Droppable droppableId=\"TRASH\">\n      {(provided) => (\n        <Container ref={provided.innerRef} {...provided.droppableProps}>\n          <IconWrapper>\n            <FontAwesomeIconStyled icon={faTrashCan} />\n            <FontAwesomeIconAllDelete\n              onClick={onClickClearBtn} // 모달 열기\n              icon={faBroom}\n            />\n            {isClearOpen && (\n              <ModalAllDelete\n                onClose={closeAllClear}\n                onConfirm={onClickClearAll}\n              />\n            )}\n          </IconWrapper>\n          {provided.placeholder}\n        </Container>\n      )}\n    </Droppable>\n  );\n};\n\nexport default DeleteBoard;\n","import React, { useState, useEffect } from 'react';\nimport { DragDropContext, DropResult } from 'react-beautiful-dnd';\nimport { useRecoilState } from 'recoil';\nimport styled from 'styled-components';\nimport { toDoState, isDarkAtom } from './atoms';\nimport Board from './Component/Board';\nimport { useForm } from 'react-hook-form';\nimport DeleteBoard from './Component/DeleteBoard';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faToggleOn, faToggleOff } from '@fortawesome/free-solid-svg-icons';\nimport { signOut } from 'firebase/auth';\nimport {\n  authService,\n  getUserUid,\n  saveTodos,\n  loadTodos,\n} from './Login/firebase';\n\nconst Header = styled.header`\n  height: 60px;\n  width: 100%;\n  background-color: ${(props) => props.theme.boardColor};\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst NowDate = styled.div`\n  text-align: center;\n  margin-bottom: 10px;\n  color: ${(props) => props.theme.bgColor};\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 0 auto;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  width: 100vh;\n  position: relative;\n`;\n\nconst CustomFontAwesomeIcon = styled(FontAwesomeIcon)`\n  font-size: 50px;\n  cursor: pointer;\n  color: ${(props) => props.theme.toggle};\n  margin-left: 20px;\n  z-index: 1;\n  margin-left: 10px;\n`;\n\nconst Boards = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: flex-start;\n`;\n\nconst FormInput = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  top: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  margin-top: 100px;\n`;\n\nconst Title = styled.h1`\n  font-size: 50px;\n  text-align: center;\n  margin-bottom: 10px;\n  color: ${(props) => props.theme.textColor};\n`;\n\nconst Input = styled.input`\n  width: 500px;\n  height: 32px;\n  font-size: 15px;\n  border: 0;\n  border-radius: 15px;\n  outline: none;\n  padding-left: 10px;\n  background-color: rgb(233, 233, 233);\n\n  &::placeholder {\n    font-family: 'Ownglyph_ryurue-Rg';\n  }\n`;\n\nconst Button = styled.button`\n  padding: 10px;\n  background-color: ${(props) => props.theme.bgColor};\n  color: ${(props) => props.theme.boardColor};\n  border-radius: 20px;\n  font-family: 'Ownglyph_ryurue-Rg';\n  font-size: 18px;\n  margin-right: 10px;\n`;\n\ninterface IForm {\n  addToDo: string;\n}\n\nconst App = () => {\n  const [toDos, setTodos] = useRecoilState(toDoState);\n  const { register, handleSubmit, setValue } = useForm<IForm>();\n  const [isToggled, setIsToggled] = useRecoilState(isDarkAtom);\n  const [formattedDate, setFormattedDate] = useState<string>(() =>\n    new Date().toLocaleString()\n  );\n  const [userId, setUserId] = useState<string | null>(null);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setFormattedDate(new Date().toLocaleString());\n    }, 1000); // 1초마다 시간 업데이트\n\n    return () => clearInterval(interval); // 컴포넌트 언마운트 시 인터벌 클리어\n  }, []);\n\n  useEffect(() => {\n    // 사용자가 로그인한 후에 Firestore에서 투두리스트를 불러옵니다.\n    const fetchData = async () => {\n      try {\n        const uid = await getUserUid();\n        setUserId(uid);\n        const userTodos = await loadTodos(uid);\n        setTodos(userTodos);\n      } catch (error) {\n        console.error('Error loading todos:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    // 투두리스트가 변경될 때마다 Firestore에 저장합니다.\n    if (userId) {\n      saveTodos(userId, toDos);\n    }\n  }, [userId, toDos]);\n\n  const toggleTheme = () => {\n    setIsToggled((prev) => !prev);\n  };\n\n  const onClickLogOut = async () => {\n    try {\n      await signOut(authService);\n      console.log('User logged out');\n      setUserId(null); // 로그아웃 후 userId 초기화\n    } catch (error) {\n      console.error('Error logging out:', error);\n    }\n  };\n\n  const onValid = ({ addToDo }: IForm) => {\n    if (Object.keys(toDos).length >= 3) {\n      return;\n    }\n    setTodos((allBoards) => {\n      return {\n        ...allBoards,\n        [addToDo]: [],\n      };\n    });\n    setValue('addToDo', '');\n  };\n\n  const onDragEnd = (result: DropResult) => {\n    const { source, destination } = result;\n\n    if (!destination) {\n      console.log('보드 밖으로 떨어짐');\n      return;\n    }\n\n    if (destination.droppableId === 'TRASH') {\n      setTodos((allBoard) => {\n        const copySource = [...allBoard[source.droppableId]];\n        copySource.splice(source.index, 1);\n\n        return {\n          ...allBoard,\n          [source.droppableId]: copySource,\n        };\n      });\n      console.log('Trash로 이동함');\n      return;\n    }\n    setTodos((allBoard) => {\n      const sourceBoard = [...allBoard[source.droppableId]];\n      const destinationBoard = [...allBoard[destination.droppableId]];\n\n      if (source.droppableId === destination.droppableId) {\n        const taskObj = sourceBoard[source.index];\n\n        sourceBoard.splice(source.index, 1);\n        sourceBoard.splice(destination.index, 0, taskObj);\n\n        return {\n          ...allBoard,\n          [source.droppableId]: sourceBoard,\n        };\n      } else {\n        const taskObj = sourceBoard[source.index];\n\n        sourceBoard.splice(source.index, 1);\n        destinationBoard.splice(destination.index, 0, taskObj);\n\n        return {\n          ...allBoard,\n          [source.droppableId]: sourceBoard,\n          [destination.droppableId]: destinationBoard,\n        };\n      }\n    });\n    console.log('보드 이동 완료');\n  };\n\n  return (\n    <>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Header>\n          <CustomFontAwesomeIcon\n            onClick={toggleTheme}\n            icon={isToggled ? faToggleOn : faToggleOff}\n          />\n          <NowDate>{formattedDate}</NowDate>\n          <Button onClick={onClickLogOut}>로그아웃</Button>\n        </Header>\n\n        <Wrapper>\n          <FormInput>\n            <Title>오늘의 너의 하루는?</Title>\n\n            <form onSubmit={handleSubmit(onValid)}>\n              <Input\n                {...register('addToDo', {\n                  required: true,\n                })}\n                placeholder=\"새로운 보드판을 만들어 봐!\"\n              />\n            </form>\n          </FormInput>\n\n          <Boards>\n            {Object.keys(toDos).map((boardId) => (\n              <Board key={boardId} boardId={boardId} toDos={toDos[boardId]} />\n            ))}\n          </Boards>\n          <DeleteBoard />\n        </Wrapper>\n      </DragDropContext>\n    </>\n  );\n};\n\nexport default React.memo(App);\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport Login from './Login/Login';\nimport SignUp from './Login/SignUp';\nimport App from './App';\nimport { authService } from './Login/firebase';\nimport { onAuthStateChanged } from 'firebase/auth';\n\nconst Router = () => {\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(authService, (user) => {\n      if (user) {\n        setLoggedIn(true);\n      } else {\n        setLoggedIn(false);\n      }\n    });\n\n    return () => unsubscribe();\n  }, []);\n\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/TRELLO_CLONE/SignUp\">\n          {loggedIn ? <Redirect to=\"/TRELLO_CLONE/Login\" /> : <SignUp />}\n        </Route>\n        <Route exact path=\"/TRELLO_CLONE/Login\">\n          {loggedIn ? <Redirect to=\"/TRELLO_CLONE/ToDoBoard\" /> : <Login />}\n        </Route>\n        <Route exact path=\"/TRELLO_CLONE/ToDoBoard\">\n          {loggedIn ? <App /> : <Redirect to=\"/TRELLO_CLONE/Login\" />}\n        </Route>\n        <Route exact path=\"/TRELLO_CLONE\">\n          <Redirect to=\"/TRELLO_CLONE/Login\" />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default Router;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { RecoilRoot, useRecoilValue } from 'recoil'; // useRecoilValue 추가\nimport { darkTheme, lightTheme } from './theme';\nimport { ThemeProvider } from 'styled-components';\nimport { createGlobalStyle } from 'styled-components';\nimport { isDarkAtom } from './atoms';\nimport { BrowserRouter } from 'react-router-dom';\nimport Router from './Router';\n\nconst GlobalStyle = createGlobalStyle`\n\n@font-face {\n    font-family: 'Ownglyph_ryurue-Rg';\n    src: url('https://fastly.jsdelivr.net/gh/projectnoonnu/2405-2@1.0/Ownglyph_ryurue-Rg.woff2') format('woff2');\n    font-weight: normal;\n    font-style: normal;\n}\n \n  html, body, div, span, applet, object, iframe,\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n  a, abbr, acronym, address, big, cite, code,\n  del, dfn, em, img, ins, kbd, q, s, samp,\n  small, strike, strong, sub, sup, tt, var,\n  b, u, i, center,\n  dl, dt, dd, menu, ol, ul, li,\n  fieldset, form, label, legend,\n  table, caption, tbody, tfoot, thead, tr, th, td,\n  article, aside, canvas, details, embed,\n  figure, figcaption, footer, header, hgroup,\n  main, menu, nav, output, ruby, section, summary,\n  time, mark, audio, video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n    \n  }\n  /* HTML5 display-role reset for older browsers */\n  article, aside, details, figcaption, figure,\n  footer, header, hgroup, main, menu, nav, section {\n    display: block;\n  }\n  /* HTML5 hidden-attribute fix for newer browsers */\n  *[hidden] {\n      display: none;\n  }\n  body {\n    line-height: 1;\n    \n \n  }\n  menu, ol, ul {\n    list-style: none;\n  }\n  blockquote, q {\n    quotes: none;\n  }\n  blockquote:before, blockquote:after,\n  q:before, q:after {\n    content: '';\n    content: none;\n  }\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n  * {\n    box-sizing: border-box;\n  }\n  body {\n    font-family: 'Ownglyph_ryurue-Rg';\n    font-weight: 400;\n    background-color: ${(props) => props.theme.bgColor};\n    color: ${(props) => props.theme.textColor};\n    line-height: 1.2;\n  }\n\n  a {\n    text-decoration: none;\n    color: inherit;\n  }\n`;\n\nconst ThemedApp = () => {\n  const isLight = useRecoilValue(isDarkAtom);\n\n  return (\n    <ThemeProvider theme={isLight ? lightTheme : darkTheme}>\n      <GlobalStyle />\n      <Router />\n    </ThemeProvider>\n  );\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <RecoilRoot>\n        <ThemedApp />\n      </RecoilRoot>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
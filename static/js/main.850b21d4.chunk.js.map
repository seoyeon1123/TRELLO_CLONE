{"version":3,"sources":["atoms.tsx","Component/Card.tsx","Component/Board.tsx","Component/DeleteBoard.tsx","App.tsx","theme.ts","index.tsx"],"names":["toDoState","atom","key","default","isDarkAtom","CardTodos","styled","div","_templateObject","_taggedTemplateLiteral","props","isDragging","theme","cardColor","Card","_ref","toDoText","toDoId","index","_jsx","_Fragment","children","Draggable","draggableId","magic","info","ref","innerRef","draggableProps","dragHandleProps","Wrapper","boardColor","Title","h2","_templateObject2","boardtextColor","Form","form","_templateObject3","Area","_templateObject4","isDraggingOver","isDraggingFromThis","Input","input","_templateObject5","TitleForm","_templateObject6","StyledFontAwesomeIcon","FontAwesomeIcon","_templateObject7","deleteBtn","Board","boardId","toDos","setToDos","useSetRecoilState","register","handleSubmit","setValue","useForm","_jsxs","icon","faMinus","onClick","onClickDeleteBoard","allBoards","deletedBoard","rest","onSubmit","_ref2","toDo","newTodo","id","Date","now","text","isDelete","Object","keys","length","required","type","placeholder","concat","Droppable","droppableId","droppableProps","Boolean","draggingFromThisWith","map","Container","IconWrapper","trash","DeleteBoard","provided","faTrashCan","CustomFontAwesomeIcon","toggle","Boards","FormInput","h1","textColor","App","setTodos","useRecoilState","isToggled","setIsToggled","DragDropContext","onDragEnd","result","source","destination","allBoard","copySource","splice","console","log","sourceBoard","destinationBoard","taskObj","toggleTheme","prev","faToggleOn","faToggleOff","addToDo","React","memo","lightTheme","bgColor","darkTheme","GlobalStyle","createGlobalStyle","ThemedApp","isDark","useRecoilValue","ThemeProvider","ReactDOM","render","StrictMode","RecoilRoot","document","getElementById"],"mappings":"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","file":"static/js/main.850b21d4.chunk.js","sourcesContent":["import { atom } from 'recoil';\n\nexport interface ITodo {\n  id: number;\n  text: string;\n  isDelete: boolean;\n}\n\nexport interface ITodoState {\n  [key: string]: ITodo[];\n}\n\nexport const toDoState = atom<ITodoState>({\n  key: 'toDo',\n  default: {},\n});\n\nexport const isDarkAtom = atom<boolean>({\n  key: 'isDark',\n  default: true, // 초기 상태는 darkTheme\n});\n","import React from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMinus } from '@fortawesome/free-solid-svg-icons';\n\nconst CardTodos = styled.div<ICardTodosProps>`\n  display: flex;\n  justify-content: space-between;\n  background-color: ${(props) =>\n    props.isDragging ? '#B7B597' : props.theme.cardColor};\n  border-radius: 10px;\n  padding: 5px 10px;\n  margin-bottom: 5px;\n`;\n\ninterface ICardProps {\n  toDoId: number;\n  toDoText: string;\n  index: number;\n}\n\ninterface ICardTodosProps {\n  isDragging: boolean;\n}\nconst Card = ({ toDoText, toDoId, index }: ICardProps) => {\n  return (\n    <>\n      <Draggable key={toDoId} draggableId={toDoId + ''} index={index}>\n        {(magic, info) => (\n          <CardTodos\n            ref={magic.innerRef}\n            {...magic.draggableProps}\n            {...magic.dragHandleProps}\n            isDragging={info.isDragging}\n          >\n            {toDoText}\n          </CardTodos>\n        )}\n      </Draggable>\n    </>\n  );\n};\n\nexport default Card;\n","import { Droppable } from 'react-beautiful-dnd';\nimport styled from 'styled-components';\nimport { toDoState } from '../atoms';\nimport Card from './Card';\nimport { useForm } from 'react-hook-form';\nimport { useSetRecoilState } from 'recoil';\nimport { ITodo } from '../atoms';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMinus } from '@fortawesome/free-solid-svg-icons';\n\nconst Wrapper = styled.div`\n  width: 300px;\n  padding-top: 10px;\n  margin: 20px;\n  background-color: ${(props) => props.theme.boardColor};\n  border-radius: 5px;\n  min-height: 300px;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  font-family: 'Gowun Batang', serif;\n`;\n\nconst Title = styled.h2`\n  text-align: center;\n  font-weight: 600;\n  margin-bottom: 10px;\n  font-size: 18px;\n  margin-right: auto;\n  color: ${(props) => props.theme.boardtextColor};\n`;\n\nconst Form = styled.form`\n  width: 100%;\n  input {\n    width: 100%;\n  }\n`;\n\ninterface IAreaProps {\n  isDraggingOver: boolean;\n  isDraggingFromThis: boolean;\n}\n\nconst Area = styled.div<IAreaProps>`\n  background-color: ${(props) =>\n    props.isDraggingOver\n      ? 'rgba(126, 215, 193, 0.1)'\n      : props.isDraggingFromThis\n      ? 'rgba(126, 215, 193, 0.1)'\n      : 'transparent'};\n  flex-grow: 1;\n  transition: background-color 0.3s ease-in-out;\n  padding: 20px;\n`;\n\nconst Input = styled.input`\n  text-align: center;\n  border-style: none;\n  background-color: '#DC8686';\n\n  height: 30px;\n\n  width: 30px;\n  &:hover {\n    text-decoration: none;\n  }\n  &:focus {\n    outline: none;\n  }\n\n  &::placeholder {\n    font-family: 'Gowun Batang', serif;\n  }\n`;\n\nconst TitleForm = styled.div`\n  display: flex;\n  text-align: center;\n  justify-content: center;\n  flex-direction: row;\n  margin: 0px 10px;\n`;\n\nconst StyledFontAwesomeIcon = styled(FontAwesomeIcon)`\n  margin-left: auto;\n  color: ${(props) => props.theme.deleteBtn};\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\ninterface IBoardProps {\n  toDos: ITodo[];\n  boardId: string;\n}\n\ninterface IForm {\n  toDo: string;\n}\nconst Board = ({ boardId, toDos }: IBoardProps) => {\n  const setToDos = useSetRecoilState(toDoState);\n  const { register, handleSubmit, setValue } = useForm<IForm>();\n\n  const onValid = ({ toDo }: IForm) => {\n    const newTodo = {\n      id: Date.now(),\n      text: toDo,\n      isDelete: false,\n    };\n\n    if (Object.keys(toDos).length >= 8) {\n      return;\n    }\n\n    setToDos((allBoards) => {\n      return {\n        ...allBoards,\n        [boardId]: [...allBoards[boardId], newTodo],\n      };\n    });\n    setValue('toDo', '');\n  };\n\n  const onClickDeleteBoard = () => {\n    setToDos((allBoards) => {\n      const { [boardId]: deletedBoard, ...rest } = allBoards;\n      return rest;\n    });\n  };\n  return (\n    <>\n      <Wrapper>\n        <TitleForm>\n          <Title>{boardId}</Title>\n          <StyledFontAwesomeIcon icon={faMinus} onClick={onClickDeleteBoard} />\n        </TitleForm>\n\n        <Form onSubmit={handleSubmit(onValid)}>\n          <Input\n            {...register('toDo', { required: true })}\n            type=\"text\"\n            placeholder={`Add task on ${boardId}`}\n          />\n        </Form>\n        <Droppable droppableId={boardId}>\n          {(magic, info) => (\n            <Area\n              ref={magic.innerRef}\n              {...magic.droppableProps}\n              isDraggingOver={info.isDraggingOver}\n              isDraggingFromThis={Boolean(info.draggingFromThisWith)}\n            >\n              {toDos.map((toDo, index) => (\n                <Card\n                  key={toDo.id}\n                  index={index}\n                  toDoText={toDo.text}\n                  toDoId={toDo.id}\n                ></Card>\n              ))}\n              {magic.placeholder}\n            </Area>\n          )}\n        </Droppable>\n      </Wrapper>\n    </>\n  );\n};\nexport default Board;\n","import { Droppable } from 'react-beautiful-dnd';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashCan } from '@fortawesome/free-regular-svg-icons';\n\nconst Container = styled.div`\n  width: 80px;\n  height: 80px;\n  /* Set relative positioning */\n  position: fixed; /* Set fixed positioning */\n  right: 20px; /* Distance from the right edge of the viewport */\n  bottom: 20px; /* Distance from the bottom edge of the viewport */\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst IconWrapper = styled.div`\n  font-size: 80px; /* Adjust size as needed */\n  color: ${(props) => props.theme.trash}; /* Change icon color */\n  position: fixed;\n`;\n\nconst DeleteBoard = () => {\n  return (\n    <Droppable droppableId=\"TRASH\">\n      {(provided) => (\n        <Container ref={provided.innerRef} {...provided.droppableProps}>\n          <IconWrapper>\n            <FontAwesomeIcon icon={faTrashCan} />\n          </IconWrapper>\n          {provided.placeholder}\n        </Container>\n      )}\n    </Droppable>\n  );\n};\n\nexport default DeleteBoard;\n","import React from 'react';\nimport { DragDropContext, DropResult } from 'react-beautiful-dnd';\nimport { useRecoilState } from 'recoil';\nimport styled from 'styled-components';\nimport { toDoState, isDarkAtom } from './atoms';\nimport Board from './Component/Board';\nimport { useForm } from 'react-hook-form';\nimport DeleteBoard from './Component/DeleteBoard';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faToggleOn, faToggleOff } from '@fortawesome/free-solid-svg-icons';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 0 auto;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  width: 100vh;\n  position: relative; /* Relative positioning for absolute children */\n`;\n\nconst CustomFontAwesomeIcon = styled(FontAwesomeIcon)`\n  font-size: 50px;\n  cursor: pointer;\n  color: ${(props) => props.theme.toggle};\n  margin: 0;\n`;\n\nconst Boards = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: flex-start;\n`;\n\nconst FormInput = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: absolute; /* Absolute positioning */\n  top: 20px; /* Adjust top position as needed */\n  left: 50%; /* Center horizontally */\n  transform: translateX(-50%); /* Center horizontally */\n  margin-top: 100px;\n`;\n\nconst Title = styled.h1`\n  font-size: 50px;\n  text-align: center;\n  margin-bottom: 10px;\n  color: ${(props) => props.theme.textColor};\n  font-family: 'Playwrite AU VIC', cursive;\n`;\n\nconst Input = styled.input`\n  width: 500px;\n  height: 32px;\n  font-size: 15px;\n  border: 0;\n  border-radius: 15px;\n  outline: none;\n  padding-left: 10px;\n  background-color: rgb(233, 233, 233);\n\n  &::placeholder {\n    font-family: 'Gowun Batang', serif;\n  }\n`;\n\ninterface IForm {\n  addToDo: string;\n}\n\nconst App = () => {\n  const [toDos, setTodos] = useRecoilState(toDoState);\n  const { register, handleSubmit, setValue } = useForm<IForm>();\n  const [isToggled, setIsToggled] = useRecoilState(isDarkAtom);\n\n  const toggleTheme = () => {\n    setIsToggled((prev) => !prev);\n  };\n\n  const onValid = ({ addToDo }: IForm) => {\n    if (Object.keys(toDos).length >= 3) {\n      return;\n    }\n    setTodos((allBoards) => {\n      return {\n        ...allBoards,\n        [addToDo]: [],\n      };\n    });\n    setValue('addToDo', '');\n  };\n\n  const onDragEnd = (result: DropResult) => {\n    const { source, destination } = result;\n\n    if (!destination) {\n      console.log('보드 밖으로 떨어짐');\n      return;\n    }\n\n    if (destination.droppableId === 'TRASH') {\n      setTodos((allBoard) => {\n        const copySource = [...allBoard[source.droppableId]];\n        copySource.splice(source.index, 1);\n\n        return {\n          ...allBoard,\n          [source.droppableId]: copySource,\n        };\n      });\n      console.log('Trash로 이동함');\n      return;\n    }\n\n    setTodos((allBoard) => {\n      const sourceBoard = [...allBoard[source.droppableId]];\n      const destinationBoard = [...allBoard[destination.droppableId]];\n\n      if (source.droppableId === destination.droppableId) {\n        const taskObj = sourceBoard[source.index];\n\n        sourceBoard.splice(source.index, 1);\n        sourceBoard.splice(destination.index, 0, taskObj);\n\n        return {\n          ...allBoard,\n          [source.droppableId]: sourceBoard,\n        };\n      } else {\n        const taskObj = sourceBoard[source.index];\n\n        sourceBoard.splice(source.index, 1);\n        destinationBoard.splice(destination.index, 0, taskObj);\n\n        return {\n          ...allBoard,\n          [source.droppableId]: sourceBoard,\n          [destination.droppableId]: destinationBoard,\n        };\n      }\n    });\n    console.log('보드 이동 완료');\n  };\n\n  return (\n    <>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <CustomFontAwesomeIcon\n          onClick={toggleTheme}\n          icon={isToggled ? faToggleOn : faToggleOff}\n        />\n        <Wrapper>\n          <FormInput>\n            <Title>What To Do Today?</Title>\n            <form onSubmit={handleSubmit(onValid)}>\n              <Input\n                {...register('addToDo', {\n                  required: true,\n                })}\n                placeholder=\"Create New Board\"\n              />\n            </form>\n          </FormInput>\n\n          <Boards>\n            {Object.keys(toDos).map((boardId) => (\n              <Board key={boardId} boardId={boardId} toDos={toDos[boardId]} />\n            ))}\n          </Boards>\n          <DeleteBoard />\n        </Wrapper>\n      </DragDropContext>\n    </>\n  );\n};\n\nexport default React.memo(App);\n","import { DefaultTheme } from 'styled-components';\n\nexport const lightTheme: DefaultTheme = {\n  bgColor: '#F1E5D1',\n  boardColor: '#254336',\n  cardColor: '#FEFEDF',\n  textColor: '#254336',\n  boardtextColor: 'white',\n  deleteBtn: 'white',\n  toggle: '#254336',\n  trash: '#254336',\n};\n\nexport const darkTheme: DefaultTheme = {\n  bgColor: '#254336',\n  boardColor: '#F1E5D1',\n  cardColor: '#6B8A7A',\n  textColor: '#F1E5D1',\n  boardtextColor: 'black',\n  deleteBtn: '#254336',\n  toggle: 'white',\n  trash: '#F1E5D1',\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { RecoilRoot, useRecoilValue } from 'recoil'; // useRecoilValue 추가\nimport { darkTheme, lightTheme } from './theme';\nimport { ThemeProvider } from 'styled-components';\nimport { createGlobalStyle } from 'styled-components';\nimport { isDarkAtom } from './atoms';\n\nconst GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css2?family=Gowun+Batang&display=swap');\n  @import url('https://fonts.googleapis.com/css2?family=Playwrite+AU+VIC:wght@100..400&display=swap');\n  html, body, div, span, applet, object, iframe,\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n  a, abbr, acronym, address, big, cite, code,\n  del, dfn, em, img, ins, kbd, q, s, samp,\n  small, strike, strong, sub, sup, tt, var,\n  b, u, i, center,\n  dl, dt, dd, menu, ol, ul, li,\n  fieldset, form, label, legend,\n  table, caption, tbody, tfoot, thead, tr, th, td,\n  article, aside, canvas, details, embed,\n  figure, figcaption, footer, header, hgroup,\n  main, menu, nav, output, ruby, section, summary,\n  time, mark, audio, video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n  }\n  /* HTML5 display-role reset for older browsers */\n  article, aside, details, figcaption, figure,\n  footer, header, hgroup, main, menu, nav, section {\n    display: block;\n  }\n  /* HTML5 hidden-attribute fix for newer browsers */\n  *[hidden] {\n      display: none;\n  }\n  body {\n    line-height: 1;\n  }\n  menu, ol, ul {\n    list-style: none;\n  }\n  blockquote, q {\n    quotes: none;\n  }\n  blockquote:before, blockquote:after,\n  q:before, q:after {\n    content: '';\n    content: none;\n  }\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n  * {\n    box-sizing: border-box;\n  }\n  body {\n    font-weight: 300;\n    font-family: \"Playwrite AU VIC\", cursive, \"Gowun Batang\", serif;\n    background-color: ${(props) => props.theme.bgColor};\n    color: ${(props) => props.theme.textColor};\n    line-height: 1.2;\n  }\n  a {\n    text-decoration: none;\n    color: inherit;\n  }\n`;\n\nconst ThemedApp = () => {\n  const isDark = useRecoilValue(isDarkAtom);\n\n  return (\n    <ThemeProvider theme={isDark ? lightTheme : darkTheme}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  );\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <ThemedApp />\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
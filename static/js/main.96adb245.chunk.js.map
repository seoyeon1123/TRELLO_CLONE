{"version":3,"sources":["theme.ts","atoms.tsx","Login/firebase.tsx","google_icon.png","Login/Login.tsx","Login/SignUp.tsx","Component/ModalEdit.tsx","Component/Card.tsx","Component/Board.tsx","Component/ModalAllDelete.tsx","Component/DeleteBoard.tsx","App.tsx","Router.tsx","index.tsx"],"names":["lightTheme","bgColor","boardColor","cardColor","textColor","boardtextColor","deleteBtn","toggle","trash","darkTheme","toDoState","atom","key","default","isDarkAtom","app","getApps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getApp","db","getFirestore","auth","getAuth","googleProvider","GoogleAuthProvider","saveTodos","async","userId","todos","userDocRef","doc","setDoc","console","log","error","loadTodos","docSnap","getDoc","_docSnap$data","exists","data","Container","styled","div","_templateObject","_taggedTemplateLiteral","props","theme","Title","h1","_templateObject2","Strong","strong","_templateObject3","Form","form","_templateObject4","Input","input","_templateObject5","Button","button","_templateObject6","GoogleBtn","_templateObject7","GoogleIconImg","img","_templateObject8","Hr","hr","_templateObject9","P","p","_templateObject10","Span","span","_templateObject11","Login","email","setEmail","useState","password","setPassword","user","setUser","setError","history","useHistory","useEffect","unsubscribe","onAuthStateChanged","currentUser","resetForm","_jsx","Redirect","to","_jsxs","children","onSubmit","event","preventDefault","userCredential","signInWithEmailAndPassword","userTodos","uid","push","message","type","value","onChange","e","target","placeholder","required","onClick","result","signInWithPopup","src","googleIcon","alt","Link","style","color","React","memo","Sub","StyledSweetAlertContainer","SignUp","createUserWithEmailAndPassword","Swal","fire","title","text","confirmButtonColor","background","backdrop","code","ModalWrapper","ModalContent","ModalEdit","_ref","toDoText","toDoId","boardId","onClose","inputValue","setValue","setTodos","useSetRecoilState","_Fragment","stopPropagation","newTodos","trim","allBoards","updatedTodos","map","todo","id","currentTarget","CardTodos","isDragging","Card","index","isEditOpen","setisEditOpen","isIconVisible","setIsIconVisible","closeEdit","onClickEdit","Draggable","draggableId","toString","magic","info","ref","innerRef","draggableProps","dragHandleProps","FontAwesomeIcon","icon","faPenToSquare","Wrapper","h2","Area","isDraggingOver","isDraggingFromThis","TitleForm","StyledFontAwesomeIcon","Board","toDos","setToDos","register","handleSubmit","useForm","faMinus","onClickDeleteBoard","deletedBoard","rest","_ref2","toDo","newTodo","Date","now","isDelete","concat","Droppable","droppableId","droppableProps","Boolean","draggingFromThisWith","Array","isArray","ModalAllDelete","onConfirm","handleConfirm","FontAwesomeIconStyled","FontAwesomeIconAllDelete","IconWrapper","DeleteBoard","isClearOpen","setClearOpen","onClickClearAll","copyAllBoards","Object","keys","forEach","closeAllClear","onClickClearBtn","provided","faTrashCan","faBroom","Header","header","NowDate","CustomFontAwesomeIcon","Boards","FormInput","App","useRecoilState","isToggled","setIsToggled","formattedDate","setFormattedDate","toLocaleString","setUserId","interval","setInterval","clearInterval","Promise","resolve","reject","fetchData","DragDropContext","onDragEnd","source","destination","allBoard","copySource","splice","sourceBoard","destinationBoard","taskObj","toggleTheme","prev","faToggleOn","faToggleOff","signOut","addToDo","LoadingContainer","LoadingText","Router","loggedIn","setLoggedIn","loading","setLoading","BrowserRouter","Switch","Route","exact","path","GlobalStyle","createGlobalStyle","ThemedApp","isLight","useRecoilValue","ThemeProvider","ReactDOM","render","StrictMode","RecoilRoot","document","getElementById"],"mappings":"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","file":"static/js/main.96adb245.chunk.js","sourcesContent":["import { DefaultTheme } from 'styled-components';\n\nexport const lightTheme: DefaultTheme = {\n  bgColor: '#F1E5D1',\n  boardColor: '#254336',\n  cardColor: '#FEFEDF',\n  textColor: '#254336',\n  boardtextColor: 'white',\n  deleteBtn: 'white',\n  toggle: '#F1E5D1',\n  trash: '#254336',\n};\n\nexport const darkTheme: DefaultTheme = {\n  bgColor: '#254336',\n  boardColor: '#F1E5D1',\n  cardColor: '#6B8A7A',\n  textColor: '#F1E5D1',\n  boardtextColor: 'black',\n  deleteBtn: '#254336',\n  toggle: '#254336',\n  trash: '#F1E5D1',\n};\n","import { atom } from 'recoil';\n\nexport interface ITodo {\n  id: number;\n  text: string;\n  isDelete: boolean;\n}\n\nexport interface ITodoState {\n  [key: string]: ITodo[];\n}\n\nexport const toDoState = atom<ITodoState>({\n  key: 'toDoState',\n  default: {},\n});\n\nexport const isDarkAtom = atom<boolean>({\n  key: 'isDark',\n  default: true,\n});\n\nexport interface Todo {\n  id: number;\n  text: string;\n  isDelete: boolean;\n}\n","// firebase.ts\nimport { initializeApp, getApps, getApp } from 'firebase/app';\nimport { getAuth, GoogleAuthProvider, onAuthStateChanged } from 'firebase/auth';\nimport {\n  getFirestore,\n  doc,\n  setDoc,\n  getDoc,\n  updateDoc,\n} from 'firebase/firestore';\nimport { Todo } from '../atoms';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyCfyu4kxlka9GUMHFd57w-NUqh-3__O2xk',\n  authDomain: 'fir-login-ceae0.firebaseapp.com',\n  projectId: 'fir-login-ceae0',\n  storageBucket: 'fir-login-ceae0.appspot.com',\n  messagingSenderId: '146389013194',\n  appId: '1:146389013194:web:0a51c6ee32ec52120c1a33',\n  measurementId: 'G-B3RY3H6YJZ',\n};\n\n// Initialize Firebase\nconst app = getApps().length === 0 ? initializeApp(firebaseConfig) : getApp();\nconst db = getFirestore(app);\nconst auth = getAuth(app);\n\n// GoogleAuthProvider instance\nconst googleProvider = new GoogleAuthProvider();\n\n// Function to get current user's UID\nconst getUserUid = (): Promise<string | null> => {\n  return new Promise((resolve, reject) => {\n    onAuthStateChanged(auth, (user) => {\n      if (user) {\n        resolve(user.uid);\n      } else {\n        reject('User not logged in');\n      }\n    });\n  });\n};\n\n// Define type for ITodoState\ninterface ITodoState {\n  [boardId: string]: Todo[];\n}\n\n// Function to save user's todos to Firestore\nconst saveTodos = async (userId: string, todos: ITodoState): Promise<void> => {\n  try {\n    const userDocRef = doc(db, 'users', userId);\n    await setDoc(userDocRef, { todos });\n    console.log('Todos saved to Firestore');\n  } catch (error) {\n    console.error('Error saving todos to Firestore:', error);\n    throw error;\n  }\n};\n\n// Function to load user's todos from Firestore\nconst loadTodos = async (userId: string): Promise<ITodoState> => {\n  try {\n    const userDocRef = doc(db, 'users', userId);\n    const docSnap = await getDoc(userDocRef);\n\n    console.log(docSnap);\n\n    if (docSnap.exists()) {\n      return docSnap.data()?.todos || {};\n    } else {\n      console.log('No such document!');\n      return {};\n    }\n  } catch (error) {\n    console.error('Error loading todos from Firestore:', error);\n    throw error;\n  }\n};\n\n// Function to update a specific todo in Firestore\nconst updateTodo = async (\n  userId: string,\n  updatedTodos: ITodoState\n): Promise<void> => {\n  try {\n    const userDocRef = doc(db, 'users', userId);\n    await updateDoc(userDocRef, { todos: updatedTodos });\n    console.log('Todo updated in Firestore');\n  } catch (error) {\n    console.error('Error updating todo in Firestore:', error);\n    throw error;\n  }\n};\n\n// Function to delete a specific todo from Firestore\nconst deleteTodo = async (\n  userId: string,\n  updatedTodos: ITodoState\n): Promise<void> => {\n  try {\n    const userDocRef = doc(db, 'users', userId);\n    await updateDoc(userDocRef, { todos: updatedTodos });\n    console.log('Todo deleted from Firestore');\n  } catch (error) {\n    console.error('Error deleting todo from Firestore:', error);\n    throw error;\n  }\n};\n\nexport {\n  auth, // Ensure auth is exported\n  googleProvider,\n  getUserUid,\n  saveTodos,\n  loadTodos,\n  updateTodo,\n  deleteTodo,\n};\n","export default __webpack_public_path__ + \"static/media/google_icon.9db27c10.png\";","import React, { useState, useEffect } from 'react';\nimport { useHistory, Link, Redirect } from 'react-router-dom';\nimport { auth, googleProvider } from './firebase';\nimport {\n  User,\n  signInWithEmailAndPassword,\n  signInWithPopup,\n  onAuthStateChanged,\n} from 'firebase/auth';\nimport styled from 'styled-components';\nimport googleIcon from '../google_icon.png';\nimport { saveTodos, loadTodos } from './firebase';\n\nconst Container = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  background-color: ${(props) => props.theme.boardColor};\n  width: 450px;\n  height: 450px;\n  color: ${(props) => props.theme.boardtextColor};\n  border-radius: 20px;\n`;\n\nconst Title = styled.h1`\n  margin-top: 20px;\n  font-size: 30px;\n`;\n\nconst Strong = styled.strong`\n  font-size: 80px;\n`;\n\nconst Form = styled.form`\n  margin-top: 20px;\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n`;\n\nconst Input = styled.input`\n  font-size: 17px;\n  padding: 5px;\n  width: 270px;\n  background-color: white;\n  margin-bottom: 5px;\n  border-radius: 10px;\n  font-family: 'Ownglyph_ryurue-Rg';\n\n  &:focus {\n    outline: none;\n  }\n\n  &::placeholder {\n    font-family: 'Ownglyph_ryurue-Rg';\n  }\n`;\n\nconst Button = styled.button`\n  margin-top: 10px;\n  font-size: 18px;\n  width: auto;\n  height: 40px;\n  background-color: ${(props) => props.theme.bgColor};\n  border-radius: 10px;\n  &:active {\n    font-size: 15px;\n  }\n  font-family: 'Ownglyph_ryurue-Rg';\n`;\n\nconst GoogleBtn = styled(Button)`\n  margin-top: 5px;\n  font-size: 15px;\n  padding: 5px 50px;\n  border-radius: 10px;\n  display: flex;\n  background-color: white;\n  align-items: center;\n`;\n\nconst GoogleIconImg = styled.img`\n  width: 30px;\n  margin-right: 10px;\n`;\n\nconst Hr = styled.hr`\n  width: 80%;\n  margin: 10px 0;\n  border: none;\n  border-top: 1px solid ${(props) => props.theme.boardtextColor};\n`;\n\nconst P = styled.p`\n  margin-top: 40px;\n  margin-bottom: 10px;\n  font-size: 20px;\n`;\n\nconst Span = styled.span`\n  color: #ffc700;\n`;\n\nconst Login = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState<User | null>(null);\n  const [error, setError] = useState('');\n  const history = useHistory();\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (currentUser) => {\n      setUser(currentUser);\n    });\n\n    return () => unsubscribe();\n  }, []);\n\n  const handleLogin = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setError('');\n\n    try {\n      const userCredential = await signInWithEmailAndPassword(\n        auth,\n        email,\n        password\n      );\n      setUser(userCredential.user);\n      console.log('User logged in:', userCredential.user);\n\n      // 사용자 데이터 불러오기\n      const userTodos = await loadTodos(userCredential.user.uid);\n      console.log('User Todos:', userTodos);\n\n      // 사용자 데이터 Firestore에 저장\n      await saveTodos(userCredential.user.uid, userTodos);\n\n      resetForm(); // 로그인 후 이메일과 비밀번호 초기화\n      history.push('/ToDoBoard'); // 로그인 성공 후 ToDoBoard로 리디렉션\n    } catch (error) {\n      const errorMessage = (error as Error).message;\n      switch (errorMessage) {\n        case 'auth/user-not-found':\n          setError('등록되지 않은 사용자입니다. 이메일을 확인해 주세요.');\n          break;\n        case 'auth/wrong-password':\n          setError('잘못된 비밀번호입니다. 다시 시도해 주세요.');\n          break;\n        case 'auth/invalid-email':\n          setError('유효하지 않은 이메일 주소입니다. 다시 입력해 주세요.');\n          break;\n        default:\n          setError('로그인 중 오류가 발생했습니다. 다시 시도해 주세요.');\n          console.error('Error logging in:', error);\n      }\n    }\n  };\n\n  const handleGoogleLogin = async () => {\n    setError('');\n\n    try {\n      const result = await signInWithPopup(auth, googleProvider);\n      setUser(result.user);\n      console.log('User signed in with Google:', result.user);\n\n      // Google 로그인 성공 후 사용자 데이터 불러오기\n      const userTodos = await loadTodos(result.user.uid);\n      console.log('User Todos:', userTodos);\n\n      // 사용자 데이터 Firestore에 저장\n      await saveTodos(result.user.uid, userTodos);\n\n      history.push('/ToDoBoard'); // Google 로그인 성공 후 ToDoBoard로 리디렉션\n    } catch (error) {\n      setError((error as Error).message);\n      console.error('Error signing in with Google:', error);\n    }\n  };\n\n  const resetForm = () => {\n    setEmail('');\n    setPassword('');\n    setError('');\n  };\n\n  // 로그인 상태일 경우 ToDoBoard로 리디렉션\n  if (user) {\n    return <Redirect to=\"/ToDoBoard\" />;\n  }\n\n  return (\n    <Container>\n      <Title>\n        <Strong>오</Strong>늘 <Strong>너</Strong>의 <Strong>하</Strong>루는\n        <Strong>?</Strong>\n      </Title>\n      <Form onSubmit={handleLogin}>\n        <Input\n          type=\"email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          placeholder=\"Email\"\n          required\n        />\n        <Input\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          placeholder=\"Password\"\n          required\n        />\n        <Button type=\"submit\">Login</Button>\n      </Form>\n      <Hr />\n\n      <GoogleBtn onClick={handleGoogleLogin}>\n        <GoogleIconImg src={googleIcon} alt=\"Google Icon\" />\n        Login with Google\n      </GoogleBtn>\n      <P>\n        계정이 없으신가요?{' '}\n        <Link to=\"/SignUp\">\n          <Span>회원가입</Span>\n        </Link>\n      </P>\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n    </Container>\n  );\n};\n\nexport default React.memo(Login);\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\nimport { auth } from './firebase';\nimport { Link } from 'react-router-dom';\nimport Swal from 'sweetalert2';\n\n// Styled components for the main container and form\nconst Container = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  background-color: ${(props) => props.theme.boardColor};\n  width: 450px;\n  height: 450px;\n  color: ${(props) => props.theme.boardtextColor};\n  border-radius: 20px;\n`;\n\nconst Title = styled.h1`\n  font-size: 40px;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n  margin-top: 15px;\n`;\n\nconst Input = styled.input`\n  font-size: 17px;\n  padding: 5px;\n  width: 270px;\n  background-color: white;\n  margin-bottom: 10px;\n  border-radius: 10px;\n  font-family: 'Ownglyph_ryurue-Rg';\n\n  &:focus {\n    outline: none;\n  }\n  &::placeholder {\n    font-family: 'Ownglyph_ryurue-Rg';\n  }\n`;\n\nconst Sub = styled.p`\n  text-align: end;\n`;\n\nconst Button = styled.button`\n  margin-top: 10px;\n  font-size: 18px;\n  width: auto;\n  height: 40px;\n  background-color: ${(props) => props.theme.bgColor};\n  border-radius: 10px;\n  &:active {\n    font-size: 15px;\n  }\n  font-family: 'Ownglyph_ryurue-Rg';\n`;\n\nconst P = styled.p`\n  margin-top: 50px;\n  margin-bottom: 0;\n  font-size: 20px;\n`;\n\nconst Span = styled.span`\n  color: #ffc700;\n`;\n\n// Custom styled-components for SweetAlert2 modals\nconst StyledSweetAlertContainer = styled.div`\n  .swal2-popup {\n    background-color: ${(props) => props.theme.boardColor};\n  }\n\n  .swal2-title {\n    color: ${(props) => props.theme.boardtextColor};\n  }\n\n  .swal2-content {\n    color: ${(props) => props.theme.boardtextColor};\n  }\n\n  .swal2-confirm {\n    background-color: ${(props) => props.theme.bgColor};\n    color: ${(props) => props.theme.boardColor};\n    border-radius: 10px;\n    padding: 10px 20px;\n    &:hover {\n      background-color: ${(props) => props.theme.boardColor};\n      color: ${(props) => props.theme.bgColor};\n    }\n  }\n`;\n\nconst SignUp = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState<string>('');\n\n  const handleSignUp = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setError('');\n\n    try {\n      const userCredential = await createUserWithEmailAndPassword(\n        auth,\n        email,\n        password\n      );\n\n      Swal.fire({\n        title: '회원가입에 성공하셨습니다!',\n        text: '메인페이지로 이동할게요 쓩 ~',\n        confirmButtonColor: '#4CAF50',\n        background: '#fff',\n        backdrop: '#F1E5D1',\n      });\n      console.log('User signed up:', userCredential.user);\n      setEmail('');\n      setPassword('');\n    } catch (error: any) {\n      switch (error.code) {\n        case 'auth/email-already-in-use':\n          setError('이미 등록된 이메일입니다. 다른 이메일을 사용해 주세요.');\n          break;\n        case 'auth/invalid-email':\n          setError('유효하지 않은 이메일 주소입니다.');\n          break;\n        case 'auth/weak-password':\n          setError(\n            '비밀번호가 너무 약합니다. 더 강력한 비밀번호를 사용해 주세요.'\n          );\n          break;\n        default:\n          setError('회원가입 중 오류가 발생했습니다.');\n          break;\n      }\n      console.error('Error signing up:', error);\n    }\n  };\n\n  return (\n    <Container>\n      <Title>회원가입</Title>\n      <Form onSubmit={handleSignUp}>\n        <Sub>너의 이메일을 입력해줘</Sub>\n        <Input\n          type=\"email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          placeholder=\"Email\"\n          required\n        />\n        <Sub>너의 비밀번호를 입력해줘</Sub>\n        <Input\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          placeholder=\"Password\"\n          required\n        />\n        <Button type=\"submit\">회원가입</Button>\n        <P>\n          이미 회원가입을 하셨나요?\n          <Link to=\"/Login\">\n            <Span> 로그인하기 </Span>\n          </Link>\n        </P>\n      </Form>\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n      <StyledSweetAlertContainer />\n    </Container>\n  );\n};\n\nexport default React.memo(SignUp);\n","import React, { useState } from 'react';\nimport { useSetRecoilState } from 'recoil';\nimport { toDoState } from '../atoms';\nimport styled from 'styled-components';\n\nconst ModalWrapper = styled.div`\n  position: fixed; /* 화면 고정 */\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.5); /* 배경 반투명 처리 */\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000; /* 다른 요소보다 위에 오도록 */\n`;\n\nconst ModalContent = styled.div`\n  background: ${(props) => props.theme.cardColor};\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n`;\n\nconst Input = styled.input`\n  border-style: none;\n  background-color: ${(props) => props.theme.cardColor};\n  border-bottom: 1px solid ${(props) => props.theme.boardColor};\n  color: ${(props) => props.theme.textColor};\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst Button = styled.button`\n  background-color: ${(props) => props.theme.boardColor};\n  margin-left: 10px;\n  color: ${(props) => props.theme.boardtextColor};\n  border-radius: 20px;\n  border: 1px solid ${(props) => props.theme.boardColor};\n  font-size: 15px;\n`;\n\ninterface IModal {\n  toDoText: string;\n  toDoId: number;\n  boardId: string;\n  onClose: () => void;\n}\n\nconst ModalEdit = ({ toDoText, toDoId, boardId, onClose }: IModal) => {\n  const [inputValue, setValue] = useState(toDoText);\n  const setTodos = useSetRecoilState(toDoState);\n\n  const onChange = (e: React.FormEvent<HTMLInputElement>) => {\n    setValue(e.currentTarget.value);\n  };\n\n  const onSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    const newTodos = inputValue;\n    if (newTodos !== null && newTodos.trim() !== '') {\n      setTodos((allBoards) => {\n        const updatedTodos = allBoards[boardId].map((todo) =>\n          todo.id === toDoId ? { ...todo, text: newTodos } : todo\n        );\n\n        return {\n          ...allBoards,\n          [boardId]: updatedTodos,\n        };\n      });\n      onClose();\n      setValue('');\n    }\n  };\n  return (\n    <>\n      <ModalWrapper onClick={onClose}>\n        <ModalContent onClick={(e) => e.stopPropagation()}>\n          <form onSubmit={onSubmit}>\n            <Input type=\"text\" value={inputValue} onChange={onChange} />\n            <Button type=\"submit\">확인</Button>\n          </form>\n        </ModalContent>\n      </ModalWrapper>\n    </>\n  );\n};\n\nexport default ModalEdit;\n","import React, { useState } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPenToSquare } from '@fortawesome/free-solid-svg-icons';\n\nimport ModalEdit from './ModalEdit';\n\nconst CardTodos = styled.div<ICardTodosProps>`\n  display: flex;\n  justify-content: space-between;\n  background-color: ${(props) =>\n    props.isDragging ? '#B7B597' : props.theme.cardColor};\n  border-radius: 10px;\n  padding: 5px 10px;\n  margin-bottom: 5px;\n`;\n\ninterface ICardProps {\n  toDoId: number;\n  toDoText: string;\n  index: number;\n  boardId: string; // 보드 ID를 문자열로 변경\n}\n\ninterface ICardTodosProps {\n  isDragging: boolean;\n}\n\nconst Card = ({ toDoText, toDoId, index, boardId }: ICardProps) => {\n  const [isEditOpen, setisEditOpen] = useState(false);\n  const [isIconVisible, setIsIconVisible] = useState(true);\n\n  const openEdit = () => {\n    setisEditOpen(true);\n    setIsIconVisible(false);\n  };\n\n  const closeEdit = () => {\n    setisEditOpen(false);\n    setIsIconVisible(true);\n  };\n\n  const onClickEdit = (e: React.MouseEvent) => {\n    e.preventDefault();\n\n    openEdit();\n  };\n\n  return (\n    <Draggable key={toDoId} draggableId={toDoId.toString()} index={index}>\n      {(magic, info) => (\n        <CardTodos\n          ref={magic.innerRef}\n          {...magic.draggableProps}\n          {...magic.dragHandleProps}\n          isDragging={info.isDragging}\n        >\n          {toDoText}\n\n          {/* <FontAwesomeIcon onClick={onClickEdit} icon={faPenToSquare} /> */}\n          {isIconVisible && (\n            <FontAwesomeIcon icon={faPenToSquare} onClick={onClickEdit} />\n          )}\n          {isEditOpen && (\n            <ModalEdit\n              toDoText={toDoText}\n              toDoId={toDoId}\n              boardId={boardId}\n              onClose={closeEdit}\n            />\n          )}\n        </CardTodos>\n      )}\n    </Draggable>\n  );\n};\n\nexport default React.memo(Card);\n","import { Droppable } from 'react-beautiful-dnd';\nimport styled from 'styled-components';\nimport { toDoState } from '../atoms';\nimport Card from './Card';\nimport { useForm } from 'react-hook-form';\nimport { useSetRecoilState } from 'recoil';\nimport { ITodo } from '../atoms';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMinus } from '@fortawesome/free-solid-svg-icons';\nimport React from 'react';\n\nconst Wrapper = styled.div`\n  width: 300px;\n  padding-top: 10px;\n  margin: 20px;\n  background-color: ${(props) => props.theme.boardColor};\n  border-radius: 5px;\n  min-height: 300px;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n`;\n\nconst Title = styled.h2`\n  text-align: center;\n  font-weight: 600;\n  margin-bottom: 10px;\n  font-size: 22px;\n  margin-right: auto;\n  color: ${(props) => props.theme.boardtextColor};\n`;\n\nconst Form = styled.form`\n  width: 100%;\n  input {\n    width: 100%;\n  }\n`;\n\ninterface IAreaProps {\n  isDraggingOver: boolean;\n  isDraggingFromThis: boolean;\n}\n\nconst Area = styled.div<IAreaProps>`\n  background-color: ${(props) =>\n    props.isDraggingOver\n      ? 'rgba(126, 215, 193, 0.1)'\n      : props.isDraggingFromThis\n      ? 'rgba(126, 215, 193, 0.1)'\n      : 'transparent'};\n  flex-grow: 1;\n  transition: background-color 0.3s ease-in-out;\n  padding: 20px;\n`;\n\nconst Input = styled.input`\n  text-align: center;\n  border-style: none;\n  background-color: '#DC8686';\n  font-size: 18px;\n  font-family: 'Ownglyph_ryurue-Rg';\n\n  height: 30px;\n\n  width: 30px;\n  &:hover {\n    text-decoration: none;\n  }\n  &:focus {\n    outline: none;\n  }\n\n  &::placeholder {\n    font-family: 'Ownglyph_ryurue-Rg';\n  }\n`;\n\nconst TitleForm = styled.div`\n  display: flex;\n  text-align: center;\n  justify-content: center;\n  flex-direction: row;\n  margin: 0px 10px;\n`;\n\nconst StyledFontAwesomeIcon = styled(FontAwesomeIcon)`\n  margin-left: auto;\n  color: ${(props) => props.theme.deleteBtn};\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\ninterface IBoardProps {\n  toDos: ITodo[];\n  boardId: string;\n}\n\ninterface IForm {\n  toDo: string;\n}\nconst Board = ({ boardId, toDos }: IBoardProps) => {\n  const setToDos = useSetRecoilState(toDoState);\n  const { register, handleSubmit, setValue } = useForm<IForm>();\n\n  const onValid = ({ toDo }: IForm) => {\n    const newTodo = {\n      id: Date.now(),\n      text: toDo,\n      isDelete: false,\n    };\n\n    if (toDos.length >= 8) {\n      return;\n    }\n\n    setToDos((allBoards) => {\n      return {\n        ...allBoards,\n        [boardId]: [...allBoards[boardId], newTodo],\n      };\n    });\n    setValue('toDo', '');\n  };\n\n  const onClickDeleteBoard = () => {\n    setToDos((allBoards) => {\n      const { [boardId]: deletedBoard, ...rest } = allBoards;\n      return rest;\n    });\n  };\n  return (\n    <>\n      <Wrapper>\n        <TitleForm>\n          <Title>{boardId}</Title>\n          <StyledFontAwesomeIcon icon={faMinus} onClick={onClickDeleteBoard} />\n        </TitleForm>\n\n        <Form onSubmit={handleSubmit(onValid)}>\n          <Input\n            {...register('toDo', { required: true })}\n            type=\"text\"\n            placeholder={`적어봐! \"${boardId}\" 의 할일을!`}\n          />\n        </Form>\n        <Droppable droppableId={boardId}>\n          {(magic, info) => (\n            <Area\n              ref={magic.innerRef}\n              {...magic.droppableProps}\n              isDraggingOver={info.isDraggingOver}\n              isDraggingFromThis={Boolean(info.draggingFromThisWith)}\n            >\n              {Array.isArray(toDos) &&\n                toDos.map((toDo, index) => (\n                  <Card\n                    boardId={boardId}\n                    key={toDo.id}\n                    index={index}\n                    toDoText={toDo.text}\n                    toDoId={toDo.id}\n                  />\n                ))}\n              {magic.placeholder}\n            </Area>\n          )}\n        </Droppable>\n      </Wrapper>\n    </>\n  );\n};\nexport default React.memo(Board);\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst ModalWrapper = styled.div`\n  position: fixed;\n  right: 20px;\n  bottom: 80px;\n  display: flex;\n  font-size: 20px;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n`;\n\nconst ModalContent = styled.div`\n  background: ${(props) => props.theme.cardColor};\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  min-width: 300px; /* 최소 너비 설정 */\n  min-height: 100px; /* 최소 높이 설정 */\n  text-align: center; /* 텍스트 중앙 정렬 */\n  font-size: 30px;\n`;\n\nconst Button = styled.button`\n  background-color: ${(props) => props.theme.boardColor};\n  margin-left: 10px;\n  color: ${(props) => props.theme.boardtextColor};\n  border-radius: 20px;\n  border: 1px solid ${(props) => props.theme.boardColor};\n  font-size: 20px;\n  padding: 5px 10px;\n  margin-top: 10px;\n  cursor: pointer; /* 포인터 커서 추가 */\n  font-family: 'Ownglyph_ryurue-Rg';\n`;\n\ninterface IModalProps {\n  onClose: () => void;\n  onConfirm: () => void;\n}\n\nconst ModalAllDelete = ({ onClose, onConfirm }: IModalProps) => {\n  const handleConfirm = () => {\n    onConfirm();\n    onClose(); // 모달 닫기\n  };\n\n  return (\n    <ModalWrapper onClick={onClose}>\n      <ModalContent onClick={(e) => e.stopPropagation()}>\n        <p>모두 삭제해도 괜찮아 ?</p>\n        <Button onClick={handleConfirm}>응!</Button>\n        <Button onClick={onClose}>아니..</Button>\n      </ModalContent>\n    </ModalWrapper>\n  );\n};\n\nexport default ModalAllDelete;\n","import React, { useState } from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashCan } from '@fortawesome/free-regular-svg-icons';\nimport { faBroom } from '@fortawesome/free-solid-svg-icons';\nimport { useSetRecoilState } from 'recoil';\nimport { toDoState } from '../atoms';\nimport ModalAllDelete from './ModalAllDelete';\n\nconst Container = styled.div`\n  width: 100px;\n  height: 100px;\n  position: fixed;\n  right: 10px;\n  bottom: 35px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst FontAwesomeIconStyled = styled(FontAwesomeIcon)`\n  margin-bottom: 10px;\n`;\n\nconst FontAwesomeIconAllDelete = styled(FontAwesomeIcon)`\n  cursor: pointer;\n  margin-bottom: 20px;\n\n  &:active {\n    font-size: 50px;\n  }\n`;\n\nconst IconWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  font-size: 60px;\n  color: ${(props) => props.theme.trash};\n  position: fixed;\n`;\n\nconst DeleteBoard = () => {\n  const [isClearOpen, setClearOpen] = useState(false);\n  const setTodos = useSetRecoilState(toDoState);\n\n  const onClickClearAll = () => {\n    setTodos((allBoards) => {\n      const copyAllBoards = { ...allBoards };\n      Object.keys(copyAllBoards).forEach((key) => delete copyAllBoards[key]);\n      return copyAllBoards;\n    });\n    setClearOpen(false); // 모달 닫기\n  };\n\n  const openAllClear = () => {\n    setClearOpen(true);\n  };\n\n  const closeAllClear = () => {\n    setClearOpen(false);\n  };\n\n  const onClickClearBtn = (e: React.MouseEvent) => {\n    e.preventDefault();\n    openAllClear();\n  };\n\n  return (\n    <Droppable droppableId=\"TRASH\">\n      {(provided) => (\n        <Container ref={provided.innerRef} {...provided.droppableProps}>\n          <IconWrapper>\n            <FontAwesomeIconStyled icon={faTrashCan} />\n            <FontAwesomeIconAllDelete\n              onClick={onClickClearBtn} // 모달 열기\n              icon={faBroom}\n            />\n            {isClearOpen && (\n              <ModalAllDelete\n                onClose={closeAllClear}\n                onConfirm={onClickClearAll}\n              />\n            )}\n          </IconWrapper>\n          {provided.placeholder}\n        </Container>\n      )}\n    </Droppable>\n  );\n};\n\nexport default DeleteBoard;\n","import React, { useState, useEffect } from 'react';\nimport { DragDropContext, DropResult } from 'react-beautiful-dnd';\nimport { useRecoilState } from 'recoil';\nimport styled from 'styled-components';\nimport { toDoState, isDarkAtom } from './atoms';\nimport Board from './Component/Board';\nimport { useForm } from 'react-hook-form';\nimport DeleteBoard from './Component/DeleteBoard';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faToggleOn, faToggleOff } from '@fortawesome/free-solid-svg-icons';\nimport { signOut } from 'firebase/auth';\nimport { auth, getUserUid, saveTodos, loadTodos } from './Login/firebase'; // Use correct import\n\nconst Header = styled.header`\n  height: 60px;\n  width: 100%;\n  background-color: ${(props) => props.theme.boardColor};\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst NowDate = styled.div`\n  text-align: center;\n  margin-bottom: 10px;\n  font-size: 18px;\n  color: ${(props) => props.theme.bgColor};\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 0 auto;\n  justify-content: center;\n  align-items: center;\n  height: 100vh; /* 화면 높이를 뷰포트 100%로 제한 */\n  width: 100h;\n  position: relative;\n`;\n\nconst CustomFontAwesomeIcon = styled(FontAwesomeIcon)`\n  font-size: 50px;\n  cursor: pointer;\n  color: ${(props) => props.theme.toggle};\n  margin-left: 20px;\n  z-index: 1;\n  margin-left: 10px;\n`;\n\nconst Boards = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: flex-start;\n`;\n\nconst FormInput = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  top: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  margin-top: 100px;\n`;\n\nconst Title = styled.h1`\n  font-size: 60px;\n  text-align: center;\n  margin-bottom: 10px;\n  color: ${(props) => props.theme.textColor};\n`;\n\nconst Input = styled.input`\n  width: 500px;\n  height: 32px;\n  font-size: 20px;\n  border: 0;\n  border-radius: 15px;\n  outline: none;\n  padding-left: 10px;\n  background-color: rgb(233, 233, 233);\n  font-family: 'Ownglyph_ryurue-Rg';\n\n  &::placeholder {\n    font-family: 'Ownglyph_ryurue-Rg';\n  }\n`;\n\nconst Button = styled.button`\n  padding: 10px;\n  background-color: ${(props) => props.theme.bgColor};\n  color: ${(props) => props.theme.boardColor};\n  border-radius: 20px;\n  font-family: 'Ownglyph_ryurue-Rg';\n  font-size: 18px;\n  margin-right: 10px;\n`;\n\ninterface IForm {\n  addToDo: string;\n}\n\nconst App: React.FC = () => {\n  const [toDos, setTodos] = useRecoilState(toDoState);\n  const { register, handleSubmit, setValue } = useForm<IForm>();\n  const [isToggled, setIsToggled] = useRecoilState(isDarkAtom);\n  const [formattedDate, setFormattedDate] = useState<string>(() =>\n    new Date().toLocaleString()\n  );\n  const [userId, setUserId] = useState<string | null>(null);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setFormattedDate(new Date().toLocaleString());\n    }, 1000); // 1초마다 시간 업데이트\n\n    return () => clearInterval(interval); // 컴포넌트 언마운트 시 인터벌 클리어\n  }, []);\n\n  useEffect(() => {\n    // 사용자가 로그인한 후에 Firestore에서 투두리스트를 불러옵니다.\n    const fetchData = async () => {\n      try {\n        const uid = await getUserUid();\n        if (uid) {\n          setUserId(uid);\n          const userTodos = await loadTodos(uid);\n          setTodos(userTodos);\n        }\n      } catch (error) {\n        console.error('Error loading todos:', error);\n      }\n    };\n\n    fetchData();\n  }, [setTodos]);\n\n  useEffect(() => {\n    // 투두리스트가 변경될 때마다 Firestore에 저장합니다.\n    if (userId) {\n      saveTodos(userId, toDos);\n    }\n  }, [userId, toDos]);\n\n  const toggleTheme = () => {\n    setIsToggled((prev) => !prev);\n  };\n\n  const onClickLogOut = async () => {\n    try {\n      await signOut(auth);\n      console.log('User logged out');\n      setUserId(null); // 로그아웃 후 userId 초기화\n    } catch (error) {\n      console.error('Error logging out:', error);\n    }\n  };\n\n  const onValid = ({ addToDo }: IForm) => {\n    if (Object.keys(toDos).length >= 3) {\n      return;\n    }\n    setTodos((allBoards) => {\n      return {\n        ...allBoards,\n        [addToDo]: [],\n      };\n    });\n    setValue('addToDo', '');\n  };\n\n  const onDragEnd = (result: DropResult) => {\n    const { source, destination } = result;\n\n    if (!destination) {\n      console.log('보드 밖으로 떨어짐');\n      return;\n    }\n\n    if (destination.droppableId === 'TRASH') {\n      setTodos((allBoard) => {\n        const copySource = [...allBoard[source.droppableId]];\n        copySource.splice(source.index, 1);\n\n        return {\n          ...allBoard,\n          [source.droppableId]: copySource,\n        };\n      });\n      console.log('Trash로 이동함');\n      return;\n    }\n    setTodos((allBoard) => {\n      const sourceBoard = [...allBoard[source.droppableId]];\n      const destinationBoard = [...allBoard[destination.droppableId]];\n\n      if (source.droppableId === destination.droppableId) {\n        const taskObj = sourceBoard[source.index];\n\n        sourceBoard.splice(source.index, 1);\n        sourceBoard.splice(destination.index, 0, taskObj);\n\n        return {\n          ...allBoard,\n          [source.droppableId]: sourceBoard,\n        };\n      } else {\n        const taskObj = sourceBoard[source.index];\n\n        sourceBoard.splice(source.index, 1);\n        destinationBoard.splice(destination.index, 0, taskObj);\n\n        return {\n          ...allBoard,\n          [source.droppableId]: sourceBoard,\n          [destination.droppableId]: destinationBoard,\n        };\n      }\n    });\n    console.log('보드 이동 완료');\n  };\n\n  return (\n    <>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Header>\n          <CustomFontAwesomeIcon\n            onClick={toggleTheme}\n            icon={isToggled ? faToggleOn : faToggleOff}\n          />\n          <NowDate>{formattedDate}</NowDate>\n          <Button onClick={onClickLogOut}>로그아웃</Button>\n        </Header>\n\n        <Wrapper>\n          <FormInput>\n            <Title>오늘의 너의 하루는?</Title>\n\n            <form onSubmit={handleSubmit(onValid)}>\n              <Input\n                {...register('addToDo', {\n                  required: true,\n                })}\n                placeholder=\"새로운 보드판을 만들어 봐!\"\n              />\n            </form>\n          </FormInput>\n\n          <Boards>\n            {Object.keys(toDos).map((boardId) => (\n              <Board key={boardId} boardId={boardId} toDos={toDos[boardId]} />\n            ))}\n          </Boards>\n          <DeleteBoard />\n        </Wrapper>\n      </DragDropContext>\n    </>\n  );\n};\n\nexport default React.memo(App);\n","// Router.tsx\n\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Login from './Login/Login';\nimport SignUp from './Login/SignUp';\nimport App from './App';\nimport { auth } from './Login/firebase'; // Import auth from firebase\n\nimport { onAuthStateChanged } from 'firebase/auth';\n\nconst LoadingContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`;\n\nconst LoadingText = styled.p`\n  font-size: 50px;\n  font-weight: bold;\n  color: #333;\n`;\n\nconst Router = () => {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\n      if (user) {\n        setLoggedIn(true);\n      } else {\n        setLoggedIn(false);\n      }\n      setLoading(false);\n    });\n\n    return () => unsubscribe();\n  }, []);\n\n  if (loading) {\n    return (\n      <LoadingContainer>\n        <LoadingText>Loading...</LoadingText>\n      </LoadingContainer>\n    );\n  }\n\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/SignUp\">\n          {loggedIn ? <Redirect to=\"/Login\" /> : <SignUp />}\n        </Route>\n        <Route exact path=\"/Login\">\n          {loggedIn ? <Redirect to=\"/ToDoBoard\" /> : <Login />}\n        </Route>\n        <Route exact path=\"/ToDoBoard\">\n          {loggedIn ? <App /> : <Redirect to=\"/Login\" />}\n        </Route>\n        <Route exact path=\"/\">\n          <Redirect to=\"/Login\" />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default Router;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { RecoilRoot, useRecoilValue } from 'recoil'; // useRecoilValue 추가\nimport { darkTheme, lightTheme } from './theme';\nimport { ThemeProvider } from 'styled-components';\nimport { createGlobalStyle } from 'styled-components';\nimport { isDarkAtom } from './atoms';\nimport { BrowserRouter } from 'react-router-dom';\nimport Router from './Router';\n\nconst GlobalStyle = createGlobalStyle`\n\n@font-face {\n    font-family: 'Ownglyph_ryurue-Rg';\n    src: url('https://fastly.jsdelivr.net/gh/projectnoonnu/2405-2@1.0/Ownglyph_ryurue-Rg.woff2') format('woff2');\n    font-weight: normal;\n    font-style: normal;\n}\n \n  html, body, div, span, applet, object, iframe,\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n  a, abbr, acronym, address, big, cite, code,\n  del, dfn, em, img, ins, kbd, q, s, samp,\n  small, strike, strong, sub, sup, tt, var,\n  b, u, i, center,\n  dl, dt, dd, menu, ol, ul, li,\n  fieldset, form, label, legend,\n  table, caption, tbody, tfoot, thead, tr, th, td,\n  article, aside, canvas, details, embed,\n  figure, figcaption, footer, header, hgroup,\n  main, menu, nav, output, ruby, section, summary,\n  time, mark, audio, video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n    \n  }\n  /* HTML5 display-role reset for older browsers */\n  article, aside, details, figcaption, figure,\n  footer, header, hgroup, main, menu, nav, section {\n    display: block;\n  }\n  /* HTML5 hidden-attribute fix for newer browsers */\n  *[hidden] {\n      display: none;\n  }\n  body {\n    line-height: 1;\n    \n \n  }\n  menu, ol, ul {\n    list-style: none;\n  }\n  blockquote, q {\n    quotes: none;\n  }\n  blockquote:before, blockquote:after,\n  q:before, q:after {\n    content: '';\n    content: none;\n  }\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n  * {\n    box-sizing: border-box;\n  }\n  body {\n    font-family: 'Ownglyph_ryurue-Rg';\n    font-weight: 400;\n    background-color: ${(props) => props.theme.bgColor};\n    color: ${(props) => props.theme.textColor};\n    line-height: 1.2;\n  }\n\n  a {\n    text-decoration: none;\n    color: inherit;\n  }\n`;\n\nconst ThemedApp = () => {\n  const isLight = useRecoilValue(isDarkAtom);\n\n  return (\n    <ThemeProvider theme={isLight ? lightTheme : darkTheme}>\n      <GlobalStyle />\n      <Router />\n    </ThemeProvider>\n  );\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <RecoilRoot>\n        <ThemedApp />\n      </RecoilRoot>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}